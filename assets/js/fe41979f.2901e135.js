"use strict";(self.webpackChunknanc_docs=self.webpackChunknanc_docs||[]).push([[622],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=r,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(f,i(i({ref:n},p),{},{components:t})):a.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5443:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_position:4},i="Local storage api",l={unversionedId:"modules/api/nanc_api_local",id:"modules/api/nanc_api_local",title:"Local storage api",description:"Installing",source:"@site/docs/modules/api/nanc_api_local.md",sourceDirName:"modules/api",slug:"/modules/api/nanc_api_local",permalink:"/docs/modules/api/nanc_api_local",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/modules/api/nanc_api_local.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Supabase api",permalink:"/docs/modules/api/nanc_api_supabase"},next:{title:"Server Driven UI",permalink:"/docs/category/server-driven-ui"}},c={},s=[{value:"Installing",id:"installing",level:2},{value:"Using",id:"using",level:2}],p={toc:s},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"local-storage-api"},"Local storage api"),(0,r.kt)("h2",{id:"installing"},"Installing"),(0,r.kt)("p",null,"Install it from ",(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/nanc_api_local"},"pub.dev"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"dependencies:\n  nanc_api_local: any\n")),(0,r.kt)("h2",{id:"using"},"Using"),(0,r.kt)("p",null,"This is the simplest implementation of the API for Nanc. Local API allows you to test the CMS as a whole and get an idea of how it works."),(0,r.kt)("p",null,"In the future this API will be supplemented - Sqlite will be used as a means of data storage, instead of the current implementation in the form of JSON-storage. This will allow to use Local API also as a mock / light version of your own SQL-backend or Supabase, as well as to transfer data between these databases."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"import 'dart:async';\n\nimport 'package:nanc/nanc.dart';\nimport 'package:nanc_configuration/nanc_configuration.dart';\nimport 'package:flutter/material.dart';\nimport 'package:nanc_api_local/nanc_api_local.dart';\n\nFuture<void> main() async {\n  await runZonedGuarded(() async {\n    WidgetsFlutterBinding.ensureInitialized();\n\n    await adminRunner(\n      CmsConfig(\n        /// ? Use them here\n        collectionApi: LocalCollectionApi(),\n        documentApi: LocalDocumentApi(),\n        modelApi: LocalModelApi(),\n        networkConfig: NetworkConfig.simple(),\n        imageBuilderDelegate: null,\n        adminWrapperBuilder: null,\n        predefinedModels: [],\n        customRenderers: [],\n        eventsHandlers: [],\n        customFonts: [],\n        sliverChecker: null,\n        customIcons: null,\n        themeBuilder: null,\n      ),\n    );\n  }, ErrorsCatcher.catchZoneErrors);\n}\n")))}d.isMDXComponent=!0}}]);